require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
source 'https://github.com/CocoaPods/Specs.git'

platform :ios, '11.0'

target 'safemobile-module' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false
  )

  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!

  # use_flipper!()
#
#  $static_framework = ['hermes-engine']
#
#  pre_install do |installer|
#    Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
#    installer.pod_targets.each do |pod|
#        if $static_framework.include?(pod.name)
#          def pod.build_type;
#            Pod::BuildType.static_library
#          end
#        end
#      end
#  end

  post_install do |installer|
    react_native_post_install(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
   

    # end
    installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
            config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
          end
#      if target.name == 'RCT-Folly'
#          target.build_configurations.each do |config|
#              config.build_settings['HEADER_SEARCH_PATHS'] = "$(inherited) ${PODS_ROOT}/fmt/include"
#          end
#      end

      # find_and_replace("Pods/Headers/Private/RCT-Folly/folly/synchronization/DistributedMutex-inl.h",
      # "atomic_notify_one(state)", "folly::atomic_notify_one(state)")
  end
  end

  # Pods for safemobile-module

  target 'safemobile-moduleTests' do
    # Pods for testing
  end

end
